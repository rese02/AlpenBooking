rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Authenticated users (agency, hoteliers) can manage hotels
    match /hotels/{hotelId} {
      allow read, write: if request.auth != null;
    }

    // Rules for Bookings
    match /bookings/{bookingId} {
      // READ: 
      // 1. Authenticated users can read a booking if they are associated with that hotel.
      // We will enforce this in backend logic (Firebase Rules cannot query other documents efficiently).
      // 2. Guests (un-authenticated) can read a specific booking if they have the correct link/token (not implemented yet).
      // For now, we allow general read for simplicity of guest form, but lock down write access.
      allow read: if true; // To be refined with token-based access for guests

      // CREATE: Authenticated users can create bookings.
      allow create: if request.auth != null;

      // UPDATE, DELETE: Authenticated users can update/delete a booking.
      // The logic in hotel-service.ts already verifies that the booking belongs to the hotel.
      allow update, delete: if request.auth != null;
    }
    
    // Prevent unauthenticated users from listing entire collections
    match /{document=**} {
      allow list: if request.auth != null;
    }
  }
}
